/*
    Light Green : #7ed56f
    Medium Green : #55c7a
    Dark Green : #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 10px;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(to right bottom,
      rgba(126, 213, 111, 0.781),
      rgba(40, 180, 131, 0.8)),
    url("/hero.3ad8264a.jpg");
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;

}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* centers text and inline-block elements*/
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* fix janky main animation */
  backface-visibility: hidden;
  margin-bottom: 50px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation: moveInLeft 1s ease-in;
}

.heading-primary-sub {
  display: block;
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-in;
}

.btn-animated {
  animation: moveInBottom 1s ease-in .75s;
  /* fills in styels before animation starts */

  animation-fill-mode: backwards;
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  display: inline-block;
  border-radius: 100px;
  /* 
    adds animation rules for transform properties in psuedo states 
    has to be on intial state
  */
  transition: all .2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);

}

.btn-white {
  background-color: #fff;
  color: #777;
  padding: 15px 40px;
}

/* 
  create btn element that mirrors orginal btn element
  but sits behind it, so when you hover out it goes back 
  behind the btn 

  height and width is based on parent btn
*/
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s;
}

.btn-white::after {
  background-color: #fff;
}

/*
  adds cool grow and explode effect 
*/
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

/*# sourceMappingURL=/main.c52e0fe2.css.map */